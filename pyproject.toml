[project]
name = "astrodating"
dynamic = [
    "version"
]
description = "Heliacal rising and other astronomical dating techniques"
readme = "README.md"
authors = [
    { name = "Frank Hubeny", email = "frankhubeny@protonmail.com" }
]
maintainers = [
  {name = "Frank Hubeny", email = "frankhubeny@protonmail.com"}
]
license = { text = "BSD-3-Clause" }
requires-python = ">=3.10"
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics",
]
keywords = [
    "astronomy",
    "chronology",
]
dependencies = [
    "numpy>=1.23",
    "pyerfa>=2.0.1.1",
    "astropy-iers-data>=0.2024.7.29.0.32.7",
    "PyYAML>=3.13",
    "packaging>=19.0",
]

[project.urls]
#Homepage = "https://example.com"
#Documentation = "https://readthedocs.org"
Repository = "https://github.com/FrankHubeny/vslpy.git"
"Bug Tracker" = "https://github.com/FrankHubeny/vslpy/issues"
#Changelog = "https://github.com/me/spam/blob/master/CHANGELOG.md"

[build-system]
requires = ["setuptools",
            "setuptools_scm>=6.2"
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE", "licenses/*.md"]

[tool.setuptools_scm]
write_to = "vslpy/_version.py"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = [
    "tests",
]
norecursedirs = [
]
astrodating_header = true
doctest_plus = "enabled"
text_file_format = "md"
remote_data_strict = true
addopts = [
    "-ra",
    "--color=yes",
    "--doctest-rst",
    "--strict-config",
    "--strict-markers",
    "-p no:legacypath",
]
log_cli_level = "info"
xfail_strict = true
filterwarnings = [
    "error",
    "ignore:unclosed <socket:ResourceWarning",
    "ignore:unclosed <ssl.SSLSocket:ResourceWarning",
    # Can be removed once Python>=3.11 is the minimum dependency,
    # cf. https://github.com/astropy/astropy/issues/13907
    "ignore:unclosed transport <asyncio.sslproto",
    "ignore:numpy\\.ufunc size changed:RuntimeWarning",
    "ignore:numpy\\.ndarray size changed:RuntimeWarning",
    "ignore:matplotlibrc text\\.usetex:UserWarning:matplotlib",
    # https://github.com/h5py/h5py/pull/2416
    "ignore:__array__ implementation doesn't accept a copy keyword:DeprecationWarning",
]
doctest_norecursedirs = [
]
doctest_subpackage_requires = [
]
markers = [
]

[tool.mypy]
mypy_path = ["src"]
files = ["src", "tests"]
python_version = "3.10"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[project.optional-dependencies]
#gui = ["PyQt5"]
#cli = [
#  "rich",
#  "click",
#]

[project.scripts]
#spam-cli = "spam:main_cli"

[project.gui-scripts]
#spam-gui = "spam:main_gui"

[project.entry-points."spam.magical"]
#tomatoes = "spam:main_tomatoes"
